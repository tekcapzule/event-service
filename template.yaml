AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Event-Service-Deployment-Descriptor

Parameters:
  Stage:
    Type: String
    Description: Stage name to deploy resources to
    AllowedValues:
      - dev
      - prod

Globals:
  Function:
    Runtime: java11
    MemorySize: 1024
    Timeout: 20
    AutoPublishAlias: !Ref Stage
    Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker
    CodeUri: ./application
    Tags:
      Stage: !Ref Stage
      Service: Event
      Resource: Lambda
    Environment:
      Variables:
        TABLE: !Ref EventTable
        APPLICATION_ENVIRONMENT: !Ref Stage
        CLOUD_REGION: us-east-1
        MAIN_CLASS: com.tekcapsule.event.application.EventApplication
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1

Resources:

  # Setup API Gateway

  EventApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "event-${Stage}"
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'X-Forwarded-For, Content-Type, Authorization, X-User-Login, X-Channel-Code'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
        AllowCredentials: false
      Variables:
        LAMBDA_ALIAS: !Ref Stage

  # Setup DynamoDB Table

  EventTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Stage}Event"
      AttributeDefinitions:
        - AttributeName: code
          AttributeType: S
        - AttributeName: eventDate
          AttributeType: S
      KeySchema:
        - AttributeName: code
          KeyType: HASH
        - AttributeName: eventDate
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  # Setup Lambda Functions

  CreatEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Event-CreateEvent"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: createFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: event/create
            Method: post
            RestApiId:
              Ref: EventApi

  UpdateEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Event-UpdateEvent"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: updateFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: event/update
            Method: post
            RestApiId:
              Ref: EventApi

  DisableEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Event-DisableEvent"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: disableFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: event/disable
            Method: post
            RestApiId:
              Ref: EventApi
  GetEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Event-GetEvent"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: event/get
            Method: post
            RestApiId:
              Ref: EventApi

  GetAllEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Event-GetAllEvent"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getAllFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: event/getAll
            Method: post
            RestApiId:
              Ref: EventApi


  # Set Output Variable

Outputs:
  ApiEndpoint:
    Description: "Event API endpoint."
    Value: !Sub "https://${EventApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/event"